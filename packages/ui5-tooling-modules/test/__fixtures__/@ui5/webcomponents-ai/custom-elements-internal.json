{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "dist/Assets.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/Button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "### Overview\n\nThe `ui5-ai-button` component serves as a button for AI-related scenarios. Users can trigger actions by clicking or tapping the `ui5-ai-button`\nor by pressing keyboard keys like [Enter] or [Space].\n\n### Usage\n\nFor the `ui5-ai-button` user interface, you can define one or more button states by placing `ui5-ai-button-state` components in their default slot.\nEach state has a name for identification and can include text, an icon, and an end icon, as needed for its purpose.\nYou can define a split mode for the `ui5-ai-button`, which will results in displaying an arrow button for additional actions.\n\nYou can choose from a set of predefined designs for `ui5-ai-button` (as in `ui5-button`) to match the desired styling.\n\nThe `ui5-ai-button` can be activated by clicking or tapping it. You can change the button state in the click event handler. When the button is\nin split mode, you can activate the default button action by clicking or tapping it, or by pressing keyboard keys like [Enter] or [Space].\nYou can activate the arrow button by clicking or tapping it, or by pressing keyboard keys like [Arrow Up], [Arrow Down], or [F4].\nTo display additional actions, you can attach a menu to the arrow button.\n\n### ES6 Module Import\n\n`import \"@ui5/webcomponents-ai/dist/Button.js\";`",
          "name": "Button",
          "slots": [
            {
              "name": "default",
              "description": "Defines the available states of the component.\n**Note:** Although this slot accepts HTML Elements, it is strongly recommended that\nyou only use `ui5-ai-button-state` components in order to preserve the intended design.",
              "_ui5propertyName": "states",
              "_ui5type": {
                "text": "Array<ButtonState>",
                "references": [
                  {
                    "name": "ButtonState",
                    "package": "@ui5/webcomponents-ai",
                    "module": "dist/ButtonState.js"
                  }
                ]
              },
              "_ui5privacy": "public"
            }
          ],
          "members": [
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "full",
              "name": "Full",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "basic",
              "name": "Basic",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "minimal",
              "name": "Minimal",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "none",
              "name": "None",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "AnimationMode",
            "module": "dist/types/AnimationMode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/CalendarType.js",
      "declarations": [
        {
          "kind": "enum",
          "name": "CalendarType",
          "description": "Different calendar types.",
          "_ui5privacy": "public",
          "members": [
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Gregorian",
              "name": "Gregorian",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Islamic",
              "name": "Islamic",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Japanese",
              "name": "Japanese",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Buddhist",
              "name": "Buddhist",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Persian",
              "name": "Persian",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CalendarType",
            "module": "dist/types/CalendarType.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/InvisibleMessageMode.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "InvisibleMessageMode",
            "module": "dist/types/InvisibleMessageMode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/ItemNavigationBehavior.js",
      "declarations": [
        {
          "kind": "enum",
          "name": "ItemNavigationBehavior",
          "description": "Different behavior for ItemNavigation.",
          "_ui5privacy": "public",
          "members": [
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "description": "Static behavior: navigations stops at the first or last item.",
              "default": "Static",
              "name": "Static",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "description": "Cycling behavior: navigating past the last item continues with the first and vice versa.",
              "default": "Cyclic",
              "name": "Cyclic",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "ItemNavigationBehavior",
            "module": "dist/types/ItemNavigationBehavior.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/MovePlacement.js",
      "declarations": [
        {
          "kind": "enum",
          "name": "MovePlacement",
          "description": "Placements of a moved element relative to a target element.",
          "_ui5privacy": "public",
          "members": [
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "On",
              "name": "On",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Before",
              "name": "Before",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "After",
              "name": "After",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MovePlacement",
            "module": "dist/types/MovePlacement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/NavigationMode.js",
      "declarations": [
        {
          "kind": "enum",
          "name": "NavigationMode",
          "description": "Different navigation modes for ItemNavigation.",
          "_ui5privacy": "public",
          "members": [
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Auto",
              "name": "Auto",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Vertical",
              "name": "Vertical",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Horizontal",
              "name": "Horizontal",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Paging",
              "name": "Paging",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "NavigationMode",
            "module": "dist/types/NavigationMode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/Orientation.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Orientation",
            "module": "dist/types/Orientation.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/SortOrder.js",
      "declarations": [
        {
          "kind": "enum",
          "name": "SortOrder",
          "description": "Defines the sort order.",
          "_ui5privacy": "public",
          "_ui5since": "2.8.0",
          "members": [
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "description": "Sorting is not applied.",
              "default": "None",
              "name": "None",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "description": "Sorting is applied in ascending order.",
              "default": "Ascending",
              "name": "Ascending",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "description": "Sorting is applied in descending order.",
              "default": "Descending",
              "name": "Descending",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "SortOrder",
            "module": "dist/types/SortOrder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types/ValueState.js",
      "declarations": [
        {
          "kind": "enum",
          "name": "ValueState",
          "description": "Different types of ValueStates.",
          "_ui5privacy": "public",
          "members": [
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "None",
              "name": "None",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Positive",
              "name": "Positive",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Critical",
              "name": "Critical",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Negative",
              "name": "Negative",
              "readonly": true
            },
            {
              "kind": "field",
              "static": true,
              "privacy": "public",
              "default": "Information",
              "name": "Information",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "ValueState",
            "module": "dist/types/ValueState.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/AccessibilityTextsHelper.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/Caret.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/ColorConversion.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/FetchHelper.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/FocusableElements.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/HTMLSanitizer.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/InvisibleMessage.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "announce",
            "module": "dist/util/InvisibleMessage.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/PopupUtils.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/SelectionAssistant.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getElementSelection",
            "module": "dist/util/SelectionAssistant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/SlotsHelper.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/StringHelper.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/TabbableElements.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/arraysAreEqual.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "arraysAreEqual",
            "module": "dist/util/arraysAreEqual.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/clamp.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "clamp",
            "module": "dist/util/clamp.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/createLinkInHead.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "createLinkInHead",
            "module": "dist/util/createLinkInHead.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/debounce.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "debounce",
            "module": "dist/util/debounce.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/detectNavigatorLanguage.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "detectNavigatorLanguage",
            "module": "dist/util/detectNavigatorLanguage.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/escapeRegex.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "escapeRegex",
            "module": "dist/util/escapeRegex.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/fixSafariActiveState.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "fixSafariActiveState",
            "module": "dist/util/fixSafariActiveState.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/formatMessage.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "formatMessage",
            "module": "dist/util/formatMessage.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/generateHighlightedMarkup.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "generateHighlightedMarkup",
            "module": "dist/util/generateHighlightedMarkup.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getActiveElement.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getActiveElement",
            "module": "dist/util/getActiveElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getClassCopy.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getClassCopy",
            "module": "dist/util/getClassCopy.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getDesigntimePropertyAsArray.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "designTimePropertyAsArray",
            "module": "dist/util/getDesigntimePropertyAsArray.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getEffectiveContentDensity.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getEffectiveContentDensity",
            "module": "dist/util/getEffectiveContentDensity.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getEffectiveScrollbarStyle.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getEffectiveScrollbarStyle",
            "module": "dist/util/getEffectiveScrollbarStyle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getFastNavigationGroups.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getFastNavigationGroups",
            "module": "dist/util/getFastNavigationGroups.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getFileExtension.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getFileExtension",
            "module": "dist/util/getFileExtension.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getNormalizedTarget.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getNormalizedTarget",
            "module": "dist/util/getNormalizedTarget.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/getSingletonElementInstance.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "getSingletonElementInstance",
            "module": "dist/util/getSingletonElementInstance.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/hash2str.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "hash2str",
            "module": "dist/util/hash2str.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/isElementClickable.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "isElementClickable",
            "module": "dist/util/isElementClickable.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/isElementHidden.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "isElementHidden",
            "module": "dist/util/isElementHidden.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/isElementInView.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "isElementInView",
            "module": "dist/util/isElementInView.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/isElementTabbable.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "isElementTabbable",
            "module": "dist/util/isElementTabbable.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/isValidPropertyName.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "isValidPropertyName",
            "module": "dist/util/isValidPropertyName.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/throttle.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "throttle",
            "module": "dist/util/throttle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/toLowercaseEnumValue.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "toLowercaseEnumValue",
            "module": "dist/util/toLowercaseEnumValue.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/whenDOMReady.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "whenDOMReady",
            "module": "dist/util/whenDOMReady.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/util/willShowContent.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "willShowContent",
            "module": "dist/util/willShowContent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/AssetRegistry.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/Boot.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/CustomElementsRegistry.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/CustomElementsScope.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/CustomElementsScopeUtils.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/DOMObserver.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/Device.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/EventProvider.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "EventProvider",
            "module": "dist/EventProvider.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/FeaturesRegistry.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/FontFace.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "insertFontFace",
            "module": "dist/FontFace.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/IgnoreCustomElements.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/InitialConfiguration.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/Keys.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/Location.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/ManagedStyles.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/MediaRange.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaRange",
            "module": "dist/MediaRange.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/PropertiesFileFormat.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "parseProperties",
            "module": "dist/PropertiesFileFormat.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Render.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/RenderQueue.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "RenderQueue",
            "module": "dist/RenderQueue.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Runtimes.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/SystemCSSVars.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "insertSystemCSSVars",
            "module": "dist/SystemCSSVars.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Theming.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/UI5Element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for all UI5 Web Components",
          "name": "UI5Element",
          "members": [
            {
              "kind": "method",
              "name": "onBeforeRendering",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Called every time before the component renders.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onAfterRendering",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Called every time after the component renders.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onEnterDOM",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Called on connectedCallback - added to the DOM.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onExitDOM",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Called on disconnectedCallback - removed from the DOM.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "attachInvalidate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "(param: InvalidationInfo) => void"
                  },
                  "_ui5privacy": "public"
                }
              ],
              "description": "Attach a callback that will be executed whenever the component is invalidated",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "detachInvalidate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "(param: InvalidationInfo) => void"
                  },
                  "_ui5privacy": "public"
                }
              ],
              "description": "Detach the callback that is executed whenever the component is invalidated",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onInvalidation",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changeInfo",
                  "type": {
                    "text": "ChangeInfo",
                    "references": [
                      {
                        "name": "ChangeInfo",
                        "package": "@ui5/webcomponents-base",
                        "module": "dist/UI5Element.js"
                      }
                    ]
                  },
                  "description": "An object with information about the change that caused invalidation.\nThe object can have the following properties:\n- type: (property|slot) tells what caused the invalidation\n1) property: a property value was changed either directly or as a result of changing the corresponding attribute\n2) slot: a slotted node(nodes) changed in one of several ways (see \"reason\")\n\n- name: the name of the property or slot that caused the invalidation\n\n- reason: (children|textcontent|childchange|slotchange) relevant only for type=\"slot\" only and tells exactly what changed in the slot\n1) children: immediate children (HTML elements or text nodes) were added, removed or reordered in the slot\n2) textcontent: text nodes in the slot changed value (or nested text nodes were added or changed value). Can only trigger for slots of \"type: Node\"\n3) slotchange: a slot element, slotted inside that slot had its \"slotchange\" event listener called. This practically means that transitively slotted children changed.\nCan only trigger if the child of a slot is a slot element itself.\n4) childchange: indicates that a UI5Element child in that slot was invalidated and in turn invalidated the component.\nCan only trigger for slots with \"invalidateOnChildChange\" metadata descriptor\n\n- newValue: the new value of the property (for type=\"property\" only)\n\n- oldValue: the old value of the property (for type=\"property\" only)\n\n- child the child that was changed (for type=\"slot\" and reason=\"childchange\" only)",
                  "_ui5privacy": "public"
                }
              ],
              "description": "A callback that is executed each time an already rendered component is invalidated (scheduled for re-rendering)",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getDomRef",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "description": "Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n*Note:* For logical (abstract) elements (items, options, etc...), returns the part of the parent's DOM that represents this option\nUse this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getFocusDomRef",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "description": "Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\nThis is the element that will receive the focus by default.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getFocusDomRefAsync",
              "return": {
                "type": {
                  "text": "Promise<HTMLElement | undefined>"
                }
              },
              "description": "Waits for dom ref and then returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\nThis is the element that will receive the focus by default.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "focusOptions",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  },
                  "description": "additional options for the focus",
                  "_ui5privacy": "public"
                }
              ],
              "description": "Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "fireEvent",
              "return": {
                "type": {
                  "text": "boolean"
                },
                "description": "false, if the event was cancelled (preventDefault called), true otherwise"
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  },
                  "description": "name of the event",
                  "_ui5privacy": "public"
                },
                {
                  "name": "data",
                  "optional": true,
                  "type": {
                    "text": "T"
                  },
                  "description": "additional data for the event",
                  "_ui5privacy": "public"
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "description": "true, if the user can call preventDefault on the event object",
                  "_ui5privacy": "public"
                },
                {
                  "name": "bubbles",
                  "default": "true",
                  "description": "true, if the event bubbles",
                  "_ui5privacy": "public"
                }
              ],
              "privacy": "public",
              "deprecated": "use fireDecoratorEvent instead"
            },
            {
              "kind": "method",
              "name": "fireDecoratorEvent",
              "return": {
                "type": {
                  "text": "boolean"
                },
                "description": "false, if the event was cancelled (preventDefault called), true otherwise"
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "N"
                  },
                  "description": "name of the event",
                  "_ui5privacy": "public"
                },
                {
                  "name": "data",
                  "optional": true,
                  "type": {
                    "text": "this[\"eventDetails\"][N] | undefined"
                  },
                  "description": "additional data for the event",
                  "_ui5privacy": "public"
                }
              ],
              "description": "Fires a custom event, configured via the \"event\" decorator.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getSlottedNodes",
              "return": {
                "type": {
                  "text": "Array<T>"
                }
              },
              "description": "Returns the actual children, associated with a slot.\nUseful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "attachComponentStateFinalized",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "() => void"
                  },
                  "_ui5privacy": "public"
                }
              ],
              "description": "Attach a callback that will be executed whenever the component's state is finalized",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "detachComponentStateFinalized",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "() => void"
                  },
                  "_ui5privacy": "public"
                }
              ],
              "description": "Detach the callback that is executed whenever the component's state is finalized",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "effectiveDir",
              "type": {
                "text": "ButtonDesign | undefined",
                "references": [
                  {
                    "name": "ButtonDesign",
                    "package": "@ui5/webcomponents",
                    "module": "dist/types/ButtonDesign.js"
                  }
                ]
              },
              "default": "\"Default\"",
              "description": "Defines the component design.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Defines whether the component is disabled.\nA disabled component can't be pressed or\nfocused, and it is not in the tab chain.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defines the current state of the component.",
              "default": "undefined",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "arrowButtonPressed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Defines the active state of the arrow button in split mode.\nSet to true when the button is in split mode and a menu with additional options\nis opened by the arrow button. Set back to false when the menu is closed.",
              "privacy": "public",
              "_ui5since": "2.6.0",
              "_ui5noAttribute": true
            }
          ],
          "events": [
            {
              "name": "click",
              "_ui5privacy": "public",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the component is activated either with a\nmouse/tap or by using the Enter or Space key.",
              "_ui5Cancelable": false,
              "_ui5allowPreventDefault": false,
              "_ui5Bubbles": true
            },
            {
              "name": "arrow-button-click",
              "_ui5privacy": "public",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the component is in split mode and after the arrow button\nis activated either by clicking or tapping it or by using the [Arrow Up] / [Arrow Down],\n[Alt] + [Arrow Up]/ [Arrow Down], or [F4] keyboard keys.",
              "_ui5Cancelable": false,
              "_ui5allowPreventDefault": false,
              "_ui5Bubbles": true
            }
          ],
          "attributes": [
            {
              "description": "Defines the component design.",
              "name": "design",
              "default": "\"Default\"",
              "fieldName": "design",
              "type": {
                "text": "\"Default\" | \"Positive\" | \"Negative\" | \"Transparent\" | \"Emphasized\" | \"Attention\" | undefined"
              }
            },
            {
              "description": "Defines whether the component is disabled.\nA disabled component can't be pressed or\nfocused, and it is not in the tab chain.",
              "name": "disabled",
              "default": "false",
              "fieldName": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "description": "Defines the current state of the component.",
              "name": "state",
              "default": "undefined",
              "fieldName": "state",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "description": "Defines the active state of the arrow button in split mode.\nSet to true when the button is in split mode and a menu with additional options\nis opened by the arrow button. Set back to false when the menu is closed.",
              "name": "arrow-button-pressed",
              "default": "false",
              "fieldName": "arrowButtonPressed",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "superclass": {
            "name": "UI5Element",
            "package": "@ui5/webcomponents-base",
            "module": "dist/UI5Element.js"
          },
          "tagName": "ui5-ai-button",
          "customElement": true,
          "_ui5experimental": "The Button and ButtonState web components are availabe since 2.0 under an experimental flag and their API and behaviour are subject to change.",
          "_ui5since": "2.0.0",
          "_ui5privacy": "public"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Button",
            "module": "dist/Button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "ui5-ai-button",
          "declaration": {
            "name": "Button",
            "module": "dist/Button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/ButtonState.js",
      "declarations": [
        {
          "kind": "class",
          "description": "### Overview\n\n`ui5-ai-button-state` is the item to use for defining states of `ui5-ai-button` components.\n\n### Usage\n\n`ui5-si-button-state` is an abstract element, representing a state of `ui5-ai-button`. It is meant to be used in the `states` slot\nof `ui5-ai-button` and should be used as standalone component.\n\n### ES6 Module Import\n\n`import \"@ui5/webcomponents/dist/AiButtonState.js\";`",
          "name": "ButtonState",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defines the name of the button state.",
              "default": "undefined",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defines the text of the button in this state.",
              "default": "undefined",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defines the icon to be displayed as graphical element within the component before the text.\nThe SAP-icons font provides numerous options.\n\n**Example:**\n\nSee all the available icons in the [Icon Explorer](https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html).",
              "default": "undefined",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "endIcon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defines the icon to be displayed as graphical element within the component after the text.\nThe SAP-icons font provides numerous options.\n\n**Example:**\n\nSee all the available icons in the [Icon Explorer](https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html).",
              "default": "undefined",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "showArrowButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Defines if the component is in split button mode.",
              "privacy": "public",
              "_ui5since": "2.6.0"
            }
          ],
          "attributes": [
            {
              "description": "Defines the name of the button state.",
              "name": "name",
              "default": "undefined",
              "fieldName": "name",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "description": "Defines the text of the button in this state.",
              "name": "text",
              "default": "undefined",
              "fieldName": "text",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "description": "Defines the icon to be displayed as graphical element within the component before the text.\nThe SAP-icons font provides numerous options.\n\n**Example:**\n\nSee all the available icons in the [Icon Explorer](https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html).",
              "name": "icon",
              "default": "undefined",
              "fieldName": "icon",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "description": "Defines the icon to be displayed as graphical element within the component after the text.\nThe SAP-icons font provides numerous options.\n\n**Example:**\n\nSee all the available icons in the [Icon Explorer](https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html).",
              "name": "end-icon",
              "default": "undefined",
              "fieldName": "endIcon",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "description": "Defines if the component is in split button mode.",
              "name": "show-arrow-button",
              "default": "false",
              "fieldName": "showArrowButton",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "superclass": {
            "name": "UI5Element",
            "package": "@ui5/webcomponents-base",
            "module": "dist/UI5Element.js"
          },
          "tagName": "ui5-ai-button-state",
          "customElement": true,
          "_ui5experimental": "The Button and ButtonState web components are availabe since 2.0 under an experimental flag and their API and behaviour are subject to change.",
          "_ui5since": "2.0.0",
          "_ui5privacy": "public",
          "_ui5abstract": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "ButtonState",
            "module": "dist/ButtonState.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "ui5-ai-button-state",
          "declaration": {
            "name": "ButtonState",
            "module": "dist/ButtonState.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/PromptInput.js",
      "declarations": [
        {
          "kind": "class",
          "description": "### Overview\n\nThe `ui5-ai-prompt-input` component allows the user to write custom instructions in natural language, so that AI is guided to generate content tailored to user needs.\n\n**Note:** The web component is in an experimental state\n\n### ES6 Module Import\n\n`import \"@ui5/webcomponents-ai/dist/PromptInput.js",
          "name": "PromptInput",
          "slots": [
            {
              "name": "default",
              "description": "Defines the suggestion items.\n\n**Note:** The suggestions would be displayed only if the `showSuggestions`\nproperty is set to `true`.\n\n**Note:** The `<ui5-suggestion-item>`, `<ui5-suggestion-item-group>` and `ui5-suggestion-item-custom` are recommended to be used as suggestion items.",
              "_ui5propertyName": "suggestionItems",
              "_ui5type": {
                "text": "Array<IInputSuggestionItem>",
                "references": [
                  {
                    "name": "IInputSuggestionItem",
                    "package": "@ui5/webcomponents",
                    "module": "dist/Input.js"
                  }
                ]
              },
              "_ui5privacy": "public"
            },
            {
              "name": "valueStateMessage",
              "description": "Defines the value state message that will be displayed as pop up under the component.\nThe value state message slot should contain only one root element.\n\n**Note:** If not specified, a default text (in the respective language) will be displayed.\n\n**Note:** The `valueStateMessage` would be displayed,\nwhen the component is in `Information`, `Critical` or `Negative` value state.",
              "_ui5since": "2.0.0",
              "_ui5type": {
                "text": "Array<HTMLElement>"
              },
              "_ui5privacy": "public"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Defines the value of the component.",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defines a short hint intended to aid the user with data entry when the\ncomponent has no value.",
              "default": "undefined",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defines the label of the input field.",
              "default": "undefined",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "showClearIcon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Defines whether the clear icon of the input will be shown.",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "showExceededText",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the characters exceeding the maximum allowed character count are visible\nin the component.\n\nIf set to `false`, the user is not allowed to enter more characters than what is set in the\n`maxlength` property.\nIf set to `true` the characters exceeding the `maxlength` value are selected on\npaste and the counter below the component displays their number.",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Defines whether the component is in disabled state.\n\n**Note:** A disabled component is completely noninteractive.",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Defines whether the component is read-only.\n\n**Note:** A read-only component is not editable,\nbut still provides visual feedback upon user interaction.",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "maxlength",
              "type": {
                "text": "number | undefined"
              },
              "description": "Sets the maximum number of characters available in the input field.",
              "default": "undefined",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "valueState",
              "type": {
                "text": "ValueState",
                "references": [
                  {
                    "name": "ValueState",
                    "package": "@ui5/webcomponents-base",
                    "module": "dist/types/ValueState.js"
                  }
                ]
              },
              "default": "\"None\"",
              "description": "Defines the value state of the component.",
              "privacy": "public",
              "_ui5since": "2.0.0"
            },
            {
              "kind": "field",
              "name": "showSuggestions",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Defines whether the component should show suggestions, if such are present.",
              "privacy": "public"
            }
          ],
          "events": [
            {
              "name": "submit",
              "_ui5privacy": "public",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the input operation has finished by pressing Enter\nor AI button is clicked.",
              "_ui5Cancelable": false,
              "_ui5allowPreventDefault": false,
              "_ui5Bubbles": true,
              "_ui5since": "2.0.0"
            },
            {
              "name": "input",
              "_ui5privacy": "public",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the value of the component changes at each keystroke,\nand when a suggestion item has been selected.",
              "_ui5Cancelable": false,
              "_ui5allowPreventDefault": false,
              "_ui5Bubbles": true,
              "_ui5since": "2.0.0"
            },
            {
              "name": "change",
              "_ui5privacy": "public",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the input operation has finished by pressing Enter\nor on focusout.",
              "_ui5Cancelable": false,
              "_ui5allowPreventDefault": false,
              "_ui5Bubbles": true,
              "_ui5since": "2.0.0"
            }
          ],
          "attributes": [
            {
              "description": "Defines the value of the component.",
              "name": "value",
              "default": "\"\"",
              "fieldName": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "description": "Defines a short hint intended to aid the user with data entry when the\ncomponent has no value.",
              "name": "placeholder",
              "default": "undefined",
              "fieldName": "placeholder",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "description": "Defines the label of the input field.",
              "name": "label",
              "default": "undefined",
              "fieldName": "label",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "description": "Defines whether the clear icon of the input will be shown.",
              "name": "show-clear-icon",
              "default": "false",
              "fieldName": "showClearIcon",
              "type": {
                "text": "boolean"
              }
            },
            {
              "description": "Determines whether the characters exceeding the maximum allowed character count are visible\nin the component.\n\nIf set to `false`, the user is not allowed to enter more characters than what is set in the\n`maxlength` property.\nIf set to `true` the characters exceeding the `maxlength` value are selected on\npaste and the counter below the component displays their number.",
              "name": "show-exceeded-text",
              "default": "false",
              "fieldName": "showExceededText",
              "type": {
                "text": "boolean"
              }
            },
            {
              "description": "Defines whether the component is in disabled state.\n\n**Note:** A disabled component is completely noninteractive.",
              "name": "disabled",
              "default": "false",
              "fieldName": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "description": "Defines whether the component is read-only.\n\n**Note:** A read-only component is not editable,\nbut still provides visual feedback upon user interaction.",
              "name": "readonly",
              "default": "false",
              "fieldName": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "description": "Sets the maximum number of characters available in the input field.",
              "name": "maxlength",
              "default": "undefined",
              "fieldName": "maxlength",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "description": "Defines the value state of the component.",
              "name": "value-state",
              "default": "\"None\"",
              "fieldName": "valueState",
              "type": {
                "text": "\"Positive\" | \"Negative\" | \"None\" | \"Critical\" | \"Information\""
              }
            },
            {
              "description": "Defines whether the component should show suggestions, if such are present.",
              "name": "show-suggestions",
              "default": "false",
              "fieldName": "showSuggestions",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "superclass": {
            "name": "UI5Element",
            "package": "@ui5/webcomponents-base",
            "module": "dist/UI5Element.js"
          },
          "tagName": "ui5-ai-prompt-input",
          "customElement": true,
          "_ui5experimental": "The **@ui5/webcomponents-ai** package is under development and considered experimental - components' APIs are subject to change.",
          "_ui5privacy": "public"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "PromptInput",
            "module": "dist/PromptInput.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "ui5-ai-prompt-input",
          "declaration": {
            "name": "PromptInput",
            "module": "dist/PromptInput.js"
          }
        }
      ]
    }
  ]
}